
# eval `keychain -q --eval --agents ssh ~/.ssh/bootstrap.ssh`
#pass -c machines/arch_server/ssh && sed -e "/pass -c machines\/arch_server\/ssh/s/^/#/g" -i "$HOME/.config/shellrc/functions.sh"
# eval `keychain -q --eval --agents ssh ~/.ssh/arch_server.ssh`
#pass -c machines/alpine/k3s_master_1/ssh && sed -e "/pass -c machines\/alpine\/k3s_master_1\/ssh/s/^/#/g" -i "$HOME/.config/shellrc/functions.sh"
# eval `keychain -q --eval --agents ssh ~/.ssh/k3s_master_1.ssh`

# [ -f "$HOME/.config/shell/exports.sh" ] && source "$HOME/.config/shell/exports.sh" && \
# [ -f "$HOME/.config/shell/aliases.sh" ] && source "$HOME/.config/shell/aliases.sh" && \
# [ -f "$CODE/shell/functions.sh" ] && source "$CODE/shell/functions.sh"

# zprofile est chargé par défaut sous tty ou ssh mais pas sous terminal avec zsh
[ -f "$HOME/.zprofile" ] && source "$HOME/.zprofile"

# https://github.com/ohmyzsh/ohmyzsh
# source: https://github.com/ohmyzsh/ohmyzsh/wiki/Plugins
ZSH_THEME="robbyrussell"
plugins=(
  git
  kubectl
  helm
  zsh-interactive-cd
  command-not-found
  web-search
    # ddg ma recherch ou google ma recher
  taskwarrior
  # sudo - KO
    # sudo          2 esc to insert sudo
  history
    # h = history, hs = history | grep , hsi = hs case-insensitive
  extract
  emoji
  emoji-clock
  # battery
  # autojump      aur/autojump
  # colorize      aur/go-chroma
  # zsh-navigation-tools
  # terraform
)

## active om-my-zsh MAIS casse alt-v
# source $ZSH/oh-my-zsh.sh

# Enable colors and change prompt:
autoload -U colors && colors	# Load colors
# old: PS1="%B%{$fg[red]%}[%{$fg[yellow]%}%n%{$fg[green]%}@%{$fg[blue]%}%M %{$fg[magenta]%}%~%{$fg[red]%}]%{$reset_color%}$%b "
PS1="

%B%{$fg[magenta]%}╭ %~
╰%{$fg[red]%}[%{$fg[yellow]%}%n%{$fg[green]%}@%{$fg[blue]%}%M%{$fg[red]%}]%{$reset_color%}->%b "

setopt autocd		# Automatically cd into typed directory.
stty stop undef		# Disable ctrl-s to freeze terminal.

# Custom prompt
# PROMPT='[%(?.%F{green}√.%F{red}?%?)%f %B%F{magenta}%/~%f%b]$ '
# autoload -Uz vcs_info
# precmd_vcs_info() { vcs_info }
# precmd_functions+=( precmd_vcs_info )
# setopt prompt_subst
# RPROMPT=\$vcs_info_msg_0_
# zstyle ':vcs_info:git:*' formats '%F{240}(%b)%r%f'
# zstyle ':vcs_info:*' enable git

# History in cache directory:
HISTSIZE=10000
SAVEHIST=10000
HISTFILE=~/.cache/zsh/history
HISTCONTROL=$HISTCONTROL:ignoreboth     # both = ignoredup + ignorespace

autoload -U compinit
zstyle ':completion:*' menu select
zmodload zsh/complist
compinit
_comp_options+=(globdots)  # Include hidden files in autocomplete:

# vi mode
bindkey -v

# Use vim keys in tab complete menu:
bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'k' vi-up-line-or-history
bindkey -M menuselect 'l' vi-forward-char
bindkey -M menuselect 'j' vi-down-line-or-history
bindkey -v '^?' backward-delete-char

export KEYTIMEOUT=1

# Change cursor shape for different vi modes.
function zle-keymap-select {
  if [[ ${KEYMAP} == vicmd ]] ||
     [[ $1 = 'block' ]]; then
    echo -ne '\e[1 q'

  elif [[ ${KEYMAP} == main ]] ||
       [[ ${KEYMAP} == viins ]] ||
       [[ ${KEYMAP} = '' ]] ||
       [[ $1 = 'beam' ]]; then
    echo -ne '\e[5 q'
  fi
}
zle -N zle-keymap-select

zle-line-init() {
    zle -K viins # initiate `vi insert` as keymap (can be removed if `bindkey -V` has been set elsewhere)
    echo -ne "\e[5 q"
}
zle -N zle-line-init
echo -ne '\e[5 q'                           # Use beam shape cursor on startup.
preexec() { echo -ne '\e[5 q' ;}            # Use beam shape cursor for each new prompt.

# Use lf to switch directories and bind it to ctrl-o
lfcd () {
  tmp="$(mktemp)"
  lf -last-dir-path="$tmp" "$@"
  if [ -f "$tmp" ]; then
    dir="$(cat "$tmp")"
    rm -f "$tmp" >/dev/null
    [ -d "$dir" ] && [ "$dir" != "$(pwd)" ] && cd "$dir"
  fi
}

bindkey -s '^o' 'lfcd\n'  # zsh

bindkey -s '^a' 'bc -l\n'

bindkey -s '^f' 'cd "$(dirname "$(fzf)")"\n'

bindkey '^[[P' delete-char

# Edit line in vim with ctrl-e:
autoload edit-command-line; zle -N edit-command-line
bindkey '^e' edit-command-line

# Load zsh-syntax-highlighting; should be last.
source /usr/share/zsh/plugins/fast-syntax-highlighting/fast-syntax-highlighting.plugin.zsh 2>/dev/null

setopt auto_pushd           # replace cd by pushd
