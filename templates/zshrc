autoload -U colors && colors	      # enable colors, must be before prompt.zsh

## TODO
# source $LOCAL/repo/git-subrepo/.rc      ## ??

if [ -x "$(command -v "thefuck")" ]; then
  eval "$(thefuck --alias)"
  # eval $(thefuck --yeah --alias)
  # eval $(thefuck --alias FUCK)
fi

# auto/tab complete
autoload -Uz compinit
# zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z}' 'r:|=*' 'l:|=* r:|=*'    # case-insensitive completion
zstyle ':completion:*' completer _expand_alias _complete _ignored _files
zstyle ':completion:*' regular true
zstyle ':completion:*' menu select
zmodload zsh/complist
compinit -d {{ path_zsh }}/zcompdump
_comp_options+=(globdots)		# to include hidden files because not enable by default
# # Shell Auto-completion
# ## pacman -Sy bash-completion
# autoload -U +X compinit && compinit
# autoload -U +X bashcompinit && bashcompinit
# eval "$(stack --bash-completion-script stack)"

# BEGIN Change cursor shape for different vi modes
zle-keymap-select (){
  if [[ ${KEYMAP} == vicmd ]] ||
     [[ $1 = 'block' ]]; then
    echo -ne '\e[1 q'

  elif [[ ${KEYMAP} == main ]] ||
       [[ ${KEYMAP} == viins ]] ||
       [[ ${KEYMAP} = '' ]] ||
       [[ $1 = 'beam' ]]; then
    echo -ne '\e[5 q'
  fi
}
zle -N zle-keymap-select

zle-line-init (){
    zle -K viins # initiate `vi insert` as keymap (can be removed if `bindkey -V` has been set elsewhere)
    echo -ne "\e[5 q"
}
zle -N zle-line-init
echo -ne '\e[5 q'                           # Use beam shape cursor on startup.
preexec() { echo -ne '\e[5 q' ;}            # Use beam shape cursor for each new prompt.
# END

ZSH_DIR={{ path_zsh }}
for file in $ZSH_DIR/functions/*; do
  source $file
done
source $ZSH_DIR/history.zsh
source $ZSH_DIR/prompt.zsh
source $ZSH_DIR/options.zsh
source $ZSH_DIR/bindkeys.zsh
source $ZSH_DIR/suffix_aliases.zsh
# source $ZSH_DIR/reveal_alias.zsh
# source $ZSH_DIR/oh-my-zsh.zsh
# source $ZSH_DIR/plugins.zsh

## A TESTER
# if command -v tmux &> /dev/null && [ -n "$PS1" ] && [[ ! "$TERM" =~ screen ]] && [[ ! "$TERM" =~ tmux ]] && [ -z "$TMUX" ]; then
#   unset TMUX
#   exec /usr/bin/env tmux -f $HOME/.config/tmux/tmux.conf
# fi

## BEGIN a deplacer dans tmux tasks to populate auto-managed
# tmux auto update window name after changing dir too
# tmux-window-name() {
# 	($TMUX_PLUGIN_MANAGER_PATH/tmux-window-name/scripts/rename_session_windows.py &)
# }
# add-zsh-hook chpwd tmux-window-name
## END

# enable colors when typing in the command line, must be at the end of zshrc
source /usr/share/zsh/plugins/fast-syntax-highlighting/fast-syntax-highlighting.plugin.zsh 2> /dev/null
