# zsh -ixc : 2>&1 | grep "my alias command"       # command to find alias's source location
aliases:
  # l: "/usr/bin/ls -lhFo --color=auto --group-directories-first --time-style='+%d %b 2k%y %H:%M'"
  l: exa -l --group-directories-first
  # m: mv -iv           # passer à rsync pour protéger des mv intérompu
  g: git
  q: exit
  r: trash
  s: sudo
  t: go-task
  v: $EDITOR
  w: watch -n 2 -d
  x: sxiv -ft *

  ## A TESTER
  ## I create sym links in a folder, setup bookmarks in nnn, then use an alias to reuse those same symlinks in the terminal
  # nb: cd $(readlink -f $(echo ~/.config/nnn/bookmarks/$(\ls ~/.config/nnn/bookmarks/ | fzf)))

  ap:         ansible-playbook
  av:         ansible-vault edit
  # ls:         ls -hN --color=auto --group-directories-first
  # la:       "/usr/bin/ls -lAhF --color=auto --group-directories-first --time-style='+%d %b 2k%y %H:%M'"
  la:         exa -lag --group-directories-first
  lg:         lazygit
  # cl:         clear; l    ## A DELETE
  refresh:    exec zsh
  ip:         ip --color=auto
  ss:         sudo systemctl
  fk:         fuck
  ra:         ranger
  tf:         terraform
  py:         python
  c-:         c -
  ia:         chatblade --chat-gpt 3.5 --stream
  aph:        ansible_homelab
  # su:         machinectl shell [username]@.host             ## a tester: new su for systemd
  size:       du -sh              ## trouver un remplacant ?
  tree:       exa -T
  md:         /usr/bin/mkdir -pv
  mkdir:      md
  move:       mv
  clip:       xclip -selection c
  clipboard:  clip
  vim:        nvim
  vimdiff:    nvim -d
  hist:       history
  # mount:      sudo mount
  # umount:     sudo umount
  # suspend:    sudo systemctl suspend          # save state fast to the RAM but lost sessions if battery down
  sleep:      suspend
  # hibernate                               # save state slowly to the disk and don't lost session if battery down but slower to power on
  # hybrid-sleep Hibernate and suspend  = save state to RAM then to disk so the power on is faster if battery is still on
  # Suspend & hibernate = Suspend the system, wake after a period of time and put it into hibernate
  logout: systemctl restart getty@tty1.service

  # kubernetes
  kubectl:  /usr/local/bin/kubectl --cache-dir ~/.cache/kube
  k:        kubectl
  kk:       c $LINUX/kubernetes
  kcc:      k config current-context
  kg:       k get
  ka:       k get all --all-namespaces
  knodes:   k get nodes -o wide
  kp:       k get pods --all-namespaces -o wide
  ks:       k get services
  kt:       k top nodes --use-protocol-buffers; echo; k top pods --use-protocol-buffers
  kd:       k get deployments --all-namespaces
  kv:       k get pv,pvc
  kapply:   k apply -f
  ki:       k get ingresses.networking.k8s.io --all-namespaces
  h:        helm

  # cloud:  c $CLOUD
  # linux:  c $LINUX
  # txt:    c $TXT

  l_dir:          echo A FAIRE ls only dirs
  l_crontab:      crontab -ls
  l_pass:         "printf '<the_password>\\nlogin: <the_login>\\nurl: <the_url>\\n<other_inputfield_name>: <inputfield_value>\\n'"
  l_cmd:          echo afficher les commandes
  l_port:         netstat -ntpul
  # l_machines:     sudo nmap -sn 192.168.1.0/24
  l_machines:   sudo ls_machines
  l_mount:        df -aTh
  l_usage:        df -h | grep -v /run/k3s
  l_date:         exa -la --sort=mod
  l_filesystems:  df -Th; lsblk --fs
  l_npm_packages: npm list -g -depth 0
  l_wifisudo:     iwlist wlp2s0 scan > /dev/null; sudo watch -n 0.2 nmcli dev wifi
  l_images:       lsix
  l_hardware:     lspci
  l_nic:          nmcli device
  log_kernel:     sudo dmesg -TxHL --follow
  log_hypr:       "{{ 'cat /tmp/hypr/$(ls -t /tmp/hypr/ | head -n 2 | tail -n 1)/hyprland.log' if compositor == 'wayland' }}"
  info_device:    lsblk -o NAME,FSTYPE,UUID
  irssi:          irssi --config={{ path_config }}/irssi/config --home={{ path_config }}/irssi
  newsboat:       "/usr/bin/newsboat --url-file={{ path_cloud }}/linux/share/newsboat/urls"

  # fun
  waves:          play -n synth brownnoise synth pinknoise mix synth 0 0 0 15 40 80 trapezium amod 0.2 20   # require sox pkg
  # crado à modifier
  qr: qr_display
  trad: $RICE/scripts/trans.sh
  vps: "export TERM=xterm && ssh -p22 $VPS; export TERM=st-256color"
  server: ssh -p 57319 -F /home/unics/.ssh/ssh_config $SERVER
  mpv: mpv --input-ipc-server=/tmp/mpvsoc$(date +%s)
  calcurse: calcurse -D ~/.config/calcurse
  sstatus:    systemctl status
  sstart:     ss start
  srestart:   ss restart
  sstop:      ss stop
  700:        chmod 700
  600:        chmod 600
  chuser:     sudo chown -R $USER:wheel
  mine:       sudo chown $USER
  brightness: light
  vpnStop:    ss stop vpn_always.service
  import_ovpn: sudo vim /etc/openvpn/client/client.conf && sudo systemctl enable --now openvpn-client@client
  sbashrc:    . $HOME/.bashrc
  szshrc:     source $SHELLRC/profile.sh
  bashrc:     v $HOME/.bashrc
  jtodo:      $JOPLIN edit 0e29a; $JOPLIN sync
  jls:        $JOPLIN use ToDo && $JOPLIN ls -l && echo; $JOPLIN use Notes && $JOPLIN ls -l
  restart_wifi: nmcli networking on
  restart_date: timedatectl set-ntp true
  restart_i3: i3-msg restart # ou reload
  restart_i3_v2: i3-msg reload
  stop_k3s: sudo /usr/local/bin/k3s-killall.sh
  trem: transmission-remote
  sdn:  sudo shutdown -h now
  gua:  git remote | xargs -L1 git push --all
  find: /usr/bin/fd
  diff: diff --color=auto
  ccat: highlight --out-format=ansi
  yt:   youtube-dl --add-metadata -i
  yta:  yt -x -f bestaudio/best
  YT:   youtube-viewer
  ref:  shortcuts >/dev/null; source ~/.config/shortcutrc
  upc:  sudo pacman -Syu; pkill -RTMIN+8 i3blocks
  lsp:  pacman -Qett --color=always | less
  twitch: "firefox -new-window https://www.twitch.tv/directory/following"
  magit:  nvim -c MagitOnly
  weath:  less -S ~/.local/share/weatherreport
  reader: sh $SCRIPTS/reader.sh
  screen: /usr/bin/screen -c $CONFIG/screen/screen.conf
  tmux:   tmux_in             #old /usr/bin/tmux -f $CONFIG/tmux/tmux.conf
  ffmpeg: ffmpeg -hide_banner
  wget:   /usr/bin/wget --hsts-file=$CACHE/wget-hsts   ## after implementing wget in roles/packages --config=$CONFIG/wget/wget.conf

