- block:
  - name: exports | blockinfile > generate {{ path_exports }}
    blockinfile:
      path:  "{{ ('/root' if item[0].owner == 'root' else ('/home/' + item[0].owner)) + path_exports }}"
      create: true
      marker: "# {mark} {{ item[1].name }}"
      block: |
        {% for export in item[1] | dict2items(key_name="key", value_name="value") %}
          {%- if export.key != "name" %}
            {%- if export.value | regex_search("\$\(") +%}  {# when item.value start by $(command) then don't add quotes #}
        export {{ export.key }}={{ export.value }}
            {%- else +%}
        export {{ export.key }}="{{ export.value }}"
            {%- endif %}
          {%- endif %}
        {% endfor %}
    #"
    with_subelements:
      - "{{ shell_exports }}"
      - list
      - skip_missing: true

  - name: exports | file > setup user/group for {{ path_exports }}
    file:
      path:  "{{ ('/root' if item[0].owner == 'root' else ('/home/' + item[0].owner)) + path_exports }}"
      owner: "{{ item[0].owner }}"
      group: "{{ item[1].group | default(item[1].name) }}"
    when: item[0].owner == item[1].name
    with_nested:
      - "{{ shell_exports }}"
      - "{{ user }}"

  tags: exports
